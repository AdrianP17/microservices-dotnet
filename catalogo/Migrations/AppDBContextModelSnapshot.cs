// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using catalogo.Data;

#nullable disable

namespace catalogo.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("catalogo.Models.Atributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Atributo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Categoría"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Género"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Deporte"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Tipo"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Colección"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Talla"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Unidad medida"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Color"
                        });
                });

            modelBuilder.Entity("catalogo.Models.AtributoValor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtributoId")
                        .HasColumnType("integer");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AtributoId");

                    b.ToTable("AtributoValor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AtributoId = 1,
                            Valor = "Ropa"
                        },
                        new
                        {
                            Id = 2,
                            AtributoId = 1,
                            Valor = "Calzado"
                        },
                        new
                        {
                            Id = 3,
                            AtributoId = 1,
                            Valor = "Accesorios"
                        },
                        new
                        {
                            Id = 4,
                            AtributoId = 2,
                            Valor = "Hombre"
                        },
                        new
                        {
                            Id = 5,
                            AtributoId = 2,
                            Valor = "Mujer"
                        },
                        new
                        {
                            Id = 6,
                            AtributoId = 2,
                            Valor = "Niños"
                        },
                        new
                        {
                            Id = 7,
                            AtributoId = 3,
                            Valor = "Urbano"
                        },
                        new
                        {
                            Id = 8,
                            AtributoId = 3,
                            Valor = "Futbol"
                        },
                        new
                        {
                            Id = 9,
                            AtributoId = 3,
                            Valor = "Correr"
                        },
                        new
                        {
                            Id = 10,
                            AtributoId = 3,
                            Valor = "Entrenar"
                        },
                        new
                        {
                            Id = 11,
                            AtributoId = 3,
                            Valor = "Tenis"
                        },
                        new
                        {
                            Id = 12,
                            AtributoId = 3,
                            Valor = "Básquet"
                        },
                        new
                        {
                            Id = 13,
                            AtributoId = 3,
                            Valor = "Voleibol"
                        },
                        new
                        {
                            Id = 14,
                            AtributoId = 3,
                            Valor = "Deportes acuáticos"
                        },
                        new
                        {
                            Id = 15,
                            AtributoId = 4,
                            Valor = "Zapatilla"
                        },
                        new
                        {
                            Id = 16,
                            AtributoId = 4,
                            Valor = "Chimpunes"
                        },
                        new
                        {
                            Id = 17,
                            AtributoId = 4,
                            Valor = "Sandalias"
                        },
                        new
                        {
                            Id = 18,
                            AtributoId = 4,
                            Valor = "Polos"
                        },
                        new
                        {
                            Id = 19,
                            AtributoId = 4,
                            Valor = "Shorts"
                        },
                        new
                        {
                            Id = 20,
                            AtributoId = 4,
                            Valor = "Pantalones"
                        },
                        new
                        {
                            Id = 21,
                            AtributoId = 4,
                            Valor = "Casacas"
                        },
                        new
                        {
                            Id = 22,
                            AtributoId = 4,
                            Valor = "Ropa de baño"
                        },
                        new
                        {
                            Id = 23,
                            AtributoId = 4,
                            Valor = "Bolsas y mochilas"
                        },
                        new
                        {
                            Id = 24,
                            AtributoId = 4,
                            Valor = "Gorras"
                        },
                        new
                        {
                            Id = 25,
                            AtributoId = 4,
                            Valor = "Medias"
                        },
                        new
                        {
                            Id = 26,
                            AtributoId = 4,
                            Valor = "Guantes"
                        },
                        new
                        {
                            Id = 27,
                            AtributoId = 5,
                            Valor = "Colección 2025"
                        },
                        new
                        {
                            Id = 28,
                            AtributoId = 11,
                            Valor = "Negro"
                        },
                        new
                        {
                            Id = 29,
                            AtributoId = 11,
                            Valor = "Blanco"
                        },
                        new
                        {
                            Id = 30,
                            AtributoId = 11,
                            Valor = "Azul"
                        },
                        new
                        {
                            Id = 31,
                            AtributoId = 11,
                            Valor = "Verde"
                        },
                        new
                        {
                            Id = 32,
                            AtributoId = 11,
                            Valor = "Plomo"
                        },
                        new
                        {
                            Id = 33,
                            AtributoId = 11,
                            Valor = "Morado"
                        },
                        new
                        {
                            Id = 34,
                            AtributoId = 11,
                            Valor = "Rosado"
                        },
                        new
                        {
                            Id = 35,
                            AtributoId = 11,
                            Valor = "Rojo"
                        },
                        new
                        {
                            Id = 36,
                            AtributoId = 11,
                            Valor = "Celeste"
                        },
                        new
                        {
                            Id = 37,
                            AtributoId = 11,
                            Valor = "Naranja"
                        },
                        new
                        {
                            Id = 38,
                            AtributoId = 11,
                            Valor = "Amarillo"
                        },
                        new
                        {
                            Id = 39,
                            AtributoId = 11,
                            Valor = "Multicolor"
                        });
                });

            modelBuilder.Entity("catalogo.Models.Favorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("Favorito");
                });

            modelBuilder.Entity("catalogo.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IdPromocion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("catalogo.Models.ProductoAtributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtributoValorId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AtributoValorId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoAtributo");
                });

            modelBuilder.Entity("catalogo.Models.ProductoImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Principal")
                        .HasColumnType("boolean");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoImagen");
                });

            modelBuilder.Entity("catalogo.Models.Variante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("Variante");
                });

            modelBuilder.Entity("catalogo.Models.VarianteAtributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtributoValorId")
                        .HasColumnType("integer");

                    b.Property<int>("VarianteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AtributoValorId");

                    b.HasIndex("VarianteId");

                    b.ToTable("VarianteAtributo");
                });

            modelBuilder.Entity("catalogo.Models.VarianteImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VarianteAtributoId")
                        .HasColumnType("integer");

                    b.Property<int>("VarianteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VarianteAtributoId");

                    b.HasIndex("VarianteId");

                    b.ToTable("VarianteImagen");
                });

            modelBuilder.Entity("catalogo.Models.AtributoValor", b =>
                {
                    b.HasOne("catalogo.Models.Atributo", "Atributo")
                        .WithMany("AtributoValores")
                        .HasForeignKey("AtributoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atributo");
                });

            modelBuilder.Entity("catalogo.Models.Favorito", b =>
                {
                    b.HasOne("catalogo.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("catalogo.Models.ProductoAtributo", b =>
                {
                    b.HasOne("catalogo.Models.AtributoValor", "AtributoValor")
                        .WithMany()
                        .HasForeignKey("AtributoValorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("catalogo.Models.Producto", "Producto")
                        .WithMany("ProductoAtributos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtributoValor");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("catalogo.Models.ProductoImagen", b =>
                {
                    b.HasOne("catalogo.Models.Producto", "Producto")
                        .WithMany("ProductoImagenes")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("catalogo.Models.Variante", b =>
                {
                    b.HasOne("catalogo.Models.Producto", "Producto")
                        .WithMany("Variantes")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("catalogo.Models.VarianteAtributo", b =>
                {
                    b.HasOne("catalogo.Models.AtributoValor", "AtributoValor")
                        .WithMany()
                        .HasForeignKey("AtributoValorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("catalogo.Models.Variante", "Variante")
                        .WithMany("VarianteAtributos")
                        .HasForeignKey("VarianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtributoValor");

                    b.Navigation("Variante");
                });

            modelBuilder.Entity("catalogo.Models.VarianteImagen", b =>
                {
                    b.HasOne("catalogo.Models.VarianteAtributo", "VarianteAtributo")
                        .WithMany()
                        .HasForeignKey("VarianteAtributoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("catalogo.Models.Variante", "Variante")
                        .WithMany("VarianteImagenes")
                        .HasForeignKey("VarianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Variante");

                    b.Navigation("VarianteAtributo");
                });

            modelBuilder.Entity("catalogo.Models.Atributo", b =>
                {
                    b.Navigation("AtributoValores");
                });

            modelBuilder.Entity("catalogo.Models.Producto", b =>
                {
                    b.Navigation("ProductoAtributos");

                    b.Navigation("ProductoImagenes");

                    b.Navigation("Variantes");
                });

            modelBuilder.Entity("catalogo.Models.Variante", b =>
                {
                    b.Navigation("VarianteAtributos");

                    b.Navigation("VarianteImagenes");
                });
#pragma warning restore 612, 618
        }
    }
}
