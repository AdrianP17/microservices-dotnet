// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using catalogo.Data;

#nullable disable

namespace catalogo.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20251006191612_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("catalogo.Models.Atributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Atributo");
                });

            modelBuilder.Entity("catalogo.Models.AtributoValor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtributoId")
                        .HasColumnType("integer");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AtributoId");

                    b.ToTable("AtributoValor");
                });

            modelBuilder.Entity("catalogo.Models.Favorito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("Favorito");
                });

            modelBuilder.Entity("catalogo.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IdPromocion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("catalogo.Models.ProductoAtributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtributoValorId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AtributoValorId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoAtributo");
                });

            modelBuilder.Entity("catalogo.Models.ProductoImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Principal")
                        .HasColumnType("boolean");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoImagen");
                });

            modelBuilder.Entity("catalogo.Models.Variante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductoId")
                        .HasColumnType("integer");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("Variante");
                });

            modelBuilder.Entity("catalogo.Models.VarianteAtributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AtributoValorId")
                        .HasColumnType("integer");

                    b.Property<int>("VarianteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AtributoValorId");

                    b.HasIndex("VarianteId");

                    b.ToTable("VarianteAtributo");
                });

            modelBuilder.Entity("catalogo.Models.VarianteImagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VarianteAtributoId")
                        .HasColumnType("integer");

                    b.Property<int>("VarianteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VarianteAtributoId");

                    b.HasIndex("VarianteId");

                    b.ToTable("VarianteImagen");
                });

            modelBuilder.Entity("catalogo.Models.AtributoValor", b =>
                {
                    b.HasOne("catalogo.Models.Atributo", "Atributo")
                        .WithMany("AtributoValores")
                        .HasForeignKey("AtributoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atributo");
                });

            modelBuilder.Entity("catalogo.Models.Favorito", b =>
                {
                    b.HasOne("catalogo.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("catalogo.Models.ProductoAtributo", b =>
                {
                    b.HasOne("catalogo.Models.AtributoValor", "AtributoValor")
                        .WithMany()
                        .HasForeignKey("AtributoValorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("catalogo.Models.Producto", "Producto")
                        .WithMany("ProductoAtributos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtributoValor");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("catalogo.Models.ProductoImagen", b =>
                {
                    b.HasOne("catalogo.Models.Producto", "Producto")
                        .WithMany("ProductoImagenes")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("catalogo.Models.Variante", b =>
                {
                    b.HasOne("catalogo.Models.Producto", "Producto")
                        .WithMany("Variantes")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("catalogo.Models.VarianteAtributo", b =>
                {
                    b.HasOne("catalogo.Models.AtributoValor", "AtributoValor")
                        .WithMany()
                        .HasForeignKey("AtributoValorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("catalogo.Models.Variante", "Variante")
                        .WithMany("VarianteAtributos")
                        .HasForeignKey("VarianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtributoValor");

                    b.Navigation("Variante");
                });

            modelBuilder.Entity("catalogo.Models.VarianteImagen", b =>
                {
                    b.HasOne("catalogo.Models.VarianteAtributo", "VarianteAtributo")
                        .WithMany()
                        .HasForeignKey("VarianteAtributoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("catalogo.Models.Variante", "Variante")
                        .WithMany("VarianteImagenes")
                        .HasForeignKey("VarianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Variante");

                    b.Navigation("VarianteAtributo");
                });

            modelBuilder.Entity("catalogo.Models.Atributo", b =>
                {
                    b.Navigation("AtributoValores");
                });

            modelBuilder.Entity("catalogo.Models.Producto", b =>
                {
                    b.Navigation("ProductoAtributos");

                    b.Navigation("ProductoImagenes");

                    b.Navigation("Variantes");
                });

            modelBuilder.Entity("catalogo.Models.Variante", b =>
                {
                    b.Navigation("VarianteAtributos");

                    b.Navigation("VarianteImagenes");
                });
#pragma warning restore 612, 618
        }
    }
}
